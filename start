#!/usr/bin/env bash

#
# Global variables.
#

APP="$(pwd)/app"
CONFIG="config"
BUNDLE="build/bundle"

if [ -z "$METEOR_SRC" ]; then
  METEOR_SRC="$HOME/src/meteor"
fi

#
# Help and usage info.
#

display_help() {
  cat <<-EOF

  A utility for running your Meteor applications.

  Usage: start [options]

  Options:
    --help             Display help
    --checkout         Use a Meteor git checkout
    --env <env>        Set the environment (development, test, production)
    --packages <path>  Tell Meteor about another packages folder
    --react-dev        Start without compiling partup-client-react
    --once             Start meteor without watching file changes
    --verbose          Start meteor with verbose logs


EOF
  exit 0
}

#
# Start your application.
#

start() {
  if [ -z "$NODE_ENV" ]; then
    NODE_ENV="development"
  fi

  local env_file="$CONFIG/$NODE_ENV/env.sh";
  local settings_file="$CONFIG/$NODE_ENV/settings.json";

  if [ -f "$env_file" ]; then source "$env_file"; fi

  if [ -f "$settings_file" ]; then
    export METEOR_SETTINGS="$(cat $settings_file)"
  fi

  if [ "$CHECKOUT" ]; then

    if [ ! -d "$METEOR_SRC" ]; then
      echo "Error: To run from a git checkout of meteor, please set the METEOR_SRC env variable to a valid meteor source folder."
      exit 1;
    fi

    echo "Using a Meteor git checkout."
    METEOR="$METEOR_SRC/meteor"
  else
    METEOR="meteor"
  fi


  if [ "$NODE_ENV" == "production" ]; then
    cd "$BUNDLE"
    echo "Installing server npm packages..."
    (cd programs/server && npm install)
    echo "Starting your app in $NODE_ENV on port $PORT"
    node main.js
  else
    if [ -z "$MIGRATE" ]; then
      export MIGRATE=latest
    fi    
    
    cd "$APP"
    echo "Running npm install..."
    meteor npm install
    
    BLUE='\033[0;36m'
    YELLOW='\033[0;33m'
    MAGENTA='\033[0;35m'
    NC='\033[0m'
    if [ "$REACT_DEV" ]; then
      echo "Starting your app in $NODE_ENV..."
      echo -e "${YELLOW}â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ"
      echo -e "â–ˆ Starting Meteor in --react-dev mode...                      â–ˆ"
      if [ ! "$ONCE" ]; then
        echo -e "â–ˆ ${MAGENTA}Warning: running without --once will slow down ${YELLOW}             â–ˆ"
        echo -e "â–ˆ ${MAGENTA}development speed significantly because Meteor will         ${YELLOW}â–ˆ"
        echo -e "â–ˆ ${MAGENTA}rebuild every time the react-package is built ðŸ˜±${YELLOW}             â–ˆ"
      fi
      echo -e "â–ˆ To start the react development environment run              â–ˆ"
      echo -e "â–ˆ => ${BLUE}cd app/packages/partup-client-react/react && yarn start${YELLOW}  â–ˆ"
      echo -e "â–ˆ in another terminal window                                  â–ˆ"
      echo -e "â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ${NC}"
    else
      echo -e "${YELLOW}â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ"
      echo -e "â–ˆ Run ${BLUE}./start --react-dev${YELLOW} to work on the react environment    â–ˆ"
      echo -e "â–ˆ Use the ${BLUE}--once${YELLOW} flag to disable the Meteor watcher           â–ˆ"
      echo -e "â–ˆ (recommended when working on the react codebase)            â–ˆ"
      echo -e "â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ${NC}"
    fi
    
    if [ "$REACT_DEV" ]; then    
      local CMD="REACT_DEV=true $VERBOSE_PRE $METEOR $ONCE $VERBOSE_SUF --settings ../$settings_file"
    else
      local CMD="$VERBOSE_PRE $METEOR $ONCE --settings ../$settings_file $VERBOSE_SUF"
    fi

    cd "$APP"
    echo "$CMD"
    eval $CMD
  fi
}

#
# Handle arguments.
#

if [ $# -eq 0 ]; then
  start
else
  while [ $# -ne 0 ]; do
    case $1 in
      -h|--help|help)       display_help ;;
      -e|--env)             export NODE_ENV="$2"; shift ;;
      --checkout)           CHECKOUT=true ;;
      --packages)           export PACKAGE_DIRS="$2:$PACKAGE_DIRS"; shift ;;
      --react-dev)          REACT_DEV=true ;;
      --once)               ONCE="--once" ;;
      --verbose)            VERBOSE_PRE="METEOR_PROFILE=1 METEOR_LOG=debug"; VERBOSE_SUF="--verbose";;
      *)                    display_help ;;
    esac
    shift
  done

  start $1
fi
